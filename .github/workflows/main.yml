# .github/workflows/notion-sync.yml
name: Notion Page Content to Jekyll
on:
  schedule:
    - cron: "0 12 * * *"
  workflow_dispatch:

jobs:
  sync-notion-pages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install \
            notion-client==2.2.0 \
            python-frontmatter==1.0.0 \
            requests==2.31.0 \
            notion-to-md==2.4.1

      - name: Run Notion Page Converter
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat << 'EOF' > notion_to_jekyll.py
          import os
          import logging
          from notion_client import Client
          from notion_to_md import NotionToMarkdown
          import frontmatter
          from datetime import datetime

          logging.basicConfig(level=logging.INFO)
          logger = logging.getLogger(__name__)

          def download_image(url, path):
              """下载图片到本地（需安装 requests）"""
              import requests
              response = requests.get(url)
              with open(path, "wb") as f:
                  f.write(response.content)

          def main():
              notion = Client(auth=os.environ["NOTION_TOKEN"])
              database_id = os.environ["NOTION_DATABASE_ID"]

              # 查询已发布文章
              try:
                  pages = notion.databases.query(
                      database_id,
                      filter={"property": "Status", "select": {"equals": "Published"}}
                  ).get("results", [])
              except Exception as e:
                  logger.error(f"查询数据库失败: {str(e)}")
                  return

              for page in pages:
                  try:
                      # 提取基础字段
                      title = page["properties"]["Title"]["title"][0]["plain_text"].strip()
                      slug = page["properties"]["Slug"]["rich_text"][0]["plain_text"].strip()
                      date_str = page["properties"]["Date"]["date"]["start"].split("T")[0]
                      page_id = page["id"]

                      # 获取页面完整内容并转换为 Markdown
                      n2m = NotionToMarkdown(page_id=page_id, notion_client=notion)
                      markdown = n2m.parse()

                      # 替换图片链接为 GitHub 相对路径
                      image_dir = "assets/images/notion"
                      os.makedirs(image_dir, exist_ok=True)
                      for block in n2m.blocks:
                          if block.type == "image":
                              image_url = block.image
                              image_name = image_url.split("/")[-1].split("?")[0]
                              local_path = f"{image_dir}/{image_name}"
                              download_image(image_url, local_path)
                              markdown = markdown.replace(image_url, f"/{local_path}")

                      # 构建 Front Matter
                      post = frontmatter.Post(markdown)
                      post["layout"] = "post"
                      post["title"] = title
                      post["date"] = date_str

                      # 保存文件
                      filename = f"_posts/{date_str}-{slug}.md"
                      with open(filename, "w", encoding="utf-8") as f:
                          f.write(frontmatter.dumps(post))
                      logger.info(f"生成文件: {filename}")

                  except Exception as e:
                      logger.error(f"处理页面失败: {str(e)} (Page ID: {page_id})")

          if __name__ == "__main__":
              main()
          EOF

          python notion_to_jekyll.py

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Auto-sync Notion pages"
          file_pattern: |
            _posts/*
            assets/images/notion/*
