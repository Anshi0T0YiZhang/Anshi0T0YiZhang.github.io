---
layout:     post
title:      "Core Data 知识梳理"
subtitle:   "Core Data"
date:       2015-10-28 12:00:00
author:     "未久夕多"
header-img: "img/home-bg-o.jpg"
tags:
    - 知乎
    - 前端开发
    - UX Design
---



> 什么是Core Data？怎么使用？


## Core Data
_[官方文档地址](https://developer.apple.com/library/ios/documentation/Cocoa/Conceptual/CoreData/index.html#//apple_ref/doc/uid/TP40001075)_

---

### 问
* 底层的持久化存储方式可以是SQLite数据库，也可以是XML文档，甚至可以直接以内存作为持久化存储设备？
* 多线程使用Core Data
* f
 

### 1. Core Data 简介及理论基础

#### 1.1 关于CoreData

#### 1.2 先熟悉几个概念
* 实体

	Core Data的核心，必须是NSManagedObject类或其子类的实例
* NSManagedObjectContext

	托管上下文：Core Data的核心对象。
* NSManagerObjectModel

	托管model：该对象负责管理整个应用的所有实体以及实体之间的关联关系。当开发者使用Xcode的图形界面设计了实体与实体的关联关系之后，需要使用该对象来加载、管理应用的托管对象模型
* NSPeristentStoreCoordinator

	持久化存储协调器：负责管理底层的存储文件，例如SQLite数据库等。
* NSEntityDescription

	实体描述：该对象代表了关于某个实体的描述信息，从某种程度来说，该对象相当于实体的抽象。实体描述定义了该实体的名字、实体的实现类，并用一个集合定义了该实体包含的所有属性。
* NSFetchRequest

	抓取请求：该对象封装了查询实体的请求，包括程序需要查询哪些实体、查询条件、排序规则等。抓取请求定义了本次查询的实体的名字、抓取请求的查询条件，通过NSPredicate来表示，并用一个NSArray集合定义了所有的排序规则。
* NSPredicate

	谓词：
	
	
![](/Users/zhangcheng/Desktop/b3a53a1ae8c24332da3c4644da861adb.jpg)

<http://www.baidu.com>

[百度](http://www.baidu.com)
	
#### 1.3 Core Data 操作步骤
* 创建NSManagedObiectModel对象来加载管理应用的托管对象模型。
* 以NSManagedObiectModel对象为基础，根据实际需要创建NSPeristentStoreCoordinator对象，该对象确定Core Data底层数据的存储形式。
* 以NSManagedObiectModel对象为基础，创建NSMannagedObjectContext，该对象是Core Data进行持久化访问的核心对象。
* 对于普通的增、删、改操作，需要分别先创建实体、删除实体、修改实体，然后调用NSMannagedObjectContext对象的save:方法将这些修改保存到底层存储设备。
* 如果要执行查询，则需要先创建NSFetchRequest对象，再调用NSMannagedObjectContext的executeFetchRequest:error：方法执行查询，该方法返回所有匹配条件的实体组成的NSArray。

#### 1.4 Core Data  注意事项
* 应用切后台、中断应用时，应save数据。
* 


### 2. 使用Core Data

#### 2.1 创建托管对象模型


#### 2.2 dd
> dd
> 
> ddd
 	
    
> dd
> 

### 4.多线程操作Core Data
NSManagedObjectContext是多线程不安全的，多个线程使用同一个context进行读写操作，会出现问题。
* 每个为每个线程创建单独的上下文对象，这样，多个上下文对象之间的数据可能会不一致，需要注册对通知NSManagedObjectContextDidSaveNotification的监听，并且通过方法mergeChangesFromContextDidSaveNotification:合并其他上下文对象修改的数据。（可以保持一个上下文对象在内存中同步所有的操作，其他线程中的上下文操作完就释放了）
* 另一种方法就是通过加锁来实现程序中仅存在的上下文对象同时只能进行一个操作。
* 使用GCD,gcd操作队列的顺序性保证同时只有一个操作上下文对象。


### 3. 参考
* <http://www.jianshu.com/p/435cfee3112c>

